{"version":3,"sources":["redux/selectors.js","redux/actionTypes.js","containers/AddTodo.js","redux/actions.js","components/AddTodo.js","App.js","reportWebVitals.js","redux/reducers/todos.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["selectTodos","store","todoState","todos","selectFilters","filter","ADD_TODO","DELETE_TODO","DELETE_ALL_TODO","UNDO_TODO","COMPLETE_TODO","SHOW_ALL","SHOW_DONE","SHOW_UNDONE","ConnectedAddTodo","connect","dispatch","addTodo","payload","type","text","connectToStore","useState","value","setValue","handleSubmit","e","preventDefault","trim","className","onSubmit","placeholder","onChange","target","onClick","Todo","todo","useDispatch","isDone","htmlFor","style","textDecoration","fontStyle","id","App","useSelector","visibilityFilter","map","index","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","todoId","initialState","combineReducers","state","action","newTodos","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e22c41b.chunk.js","sourcesContent":["export const selectTodos = (store) => store.todoState.todos\nexport const selectFilters = (store) => store.todoState.filter\n","export const ADD_TODO = 'add_todo'\nexport const DELETE_TODO = 'delete_todo'\nexport const DELETE_ALL_TODO = 'delete_all_todo'\nexport const UNDO_TODO = 'undo_todo'\nexport const COMPLETE_TODO = 'complete_todo'\nexport const SHOW_ALL = 'show_all_todo'\nexport const SHOW_DONE = 'show_done_todo'\nexport const SHOW_UNDONE = 'show_undone_todo'\n","import { connect } from 'react-redux'\nimport { addTodo } from '../redux/actions'\nimport AddTodo from '../components/AddTodo'\n\nconst mapStateToProps = (store) => {\n  return {\n    todos: store.todoState.todos\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTodo: (payload) => dispatch(addTodo(payload))\n  }\n}\n\nconst connectToStore = connect(mapStateToProps, mapDispatchToProps)\n\n// smart component\nconst ConnectedAddTodo = connectToStore(AddTodo)\n\nexport default ConnectedAddTodo\n","import {\n  ADD_TODO,\n  COMPLETE_TODO,\n  UNDO_TODO,\n  DELETE_ALL_TODO,\n  DELETE_TODO,\n  SHOW_ALL,\n  SHOW_DONE,\n  SHOW_UNDONE\n} from './actionTypes'\n\nexport function addTodo(text) {\n  return {\n    type: ADD_TODO,\n    payload: {\n      text\n    }\n  }\n}\n\nexport function completeTodo(id) {\n  return {\n    type: COMPLETE_TODO,\n    payload: {\n      id\n    }\n  }\n}\n\nexport function undoTodo(id) {\n  return {\n    type: UNDO_TODO,\n    payload: {\n      id\n    }\n  }\n}\n\nexport function deleteTodo(id) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id\n    }\n  }\n}\n\nexport function deleteAllTodo() {\n  return {\n    type: DELETE_ALL_TODO\n  }\n}\n\nexport function showAll() {\n  return {\n    type: SHOW_ALL\n  }\n}\n\nexport function showDone() {\n  return {\n    type: SHOW_DONE\n  }\n}\n\nexport function showUndone() {\n  return {\n    type: SHOW_UNDONE\n  }\n}\n","import { useState } from 'react'\n\nexport default function AddTodo({ addTodo }) {\n  const [value, setValue] = useState('')\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (value.trim() !== '') {\n      addTodo(value)\n      setValue('')\n    }\n  }\n\n  return (\n    <form className=\"input-group mb-3\" onSubmit={handleSubmit}>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        placeholder=\"What do you want to get done today...\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <button className=\"btn btn-outline-light\" onClick={handleSubmit}>\n        +\n      </button>\n    </form>\n  )\n}\n","import './App.css'\nimport { useSelector } from 'react-redux'\nimport { selectFilters, selectTodos } from './redux/selectors'\nimport { useDispatch } from 'react-redux'\nimport AddTodo from './containers/AddTodo'\nimport {\n  undoTodo,\n  completeTodo,\n  deleteTodo,\n  deleteAllTodo,\n  showDone,\n  showAll,\n  showUndone\n} from './redux/actions'\n\nfunction Todo({ todo }) {\n  const dispatch = useDispatch()\n  return (\n    <li className=\"todo-item\">\n      <div className={todo.isDone ? 'done' : 'undone'}>\n        <label\n          className=\"form-check-label1\"\n          htmlFor=\"{todo.index}\"\n          style={{\n            textDecoration: todo.isDone ? 'line-through' : 'none',\n            fontStyle: todo.isDone ? 'italic' : ''\n          }}\n        >\n          {todo.text}\n        </label>\n      </div>\n      <div className=\"todo-btn\">\n        <button\n          type=\"button\"\n          className={\n            todo.isDone ? 'btn btn-outline-success' : 'btn btn-outline-danger'\n          }\n          onClick={\n            todo.isDone\n              ? () => dispatch(undoTodo(todo.id))\n              : () => dispatch(completeTodo(todo.id))\n          }\n        >\n          {todo.isDone ? 'done' : 'undone'}\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark\"\n          onClick={() => dispatch(deleteTodo(todo.id))}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  )\n}\n\nfunction App() {\n  const todos = useSelector(selectTodos)\n  const visibilityFilter = useSelector(selectFilters)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"wrapper\">\n      <header></header>\n\n      <section className=\"todo\">\n        <div className=\"todo-container\">\n          <div className=\"todo-top\">\n            <h1>Redux React Todo</h1>\n          </div>\n        </div>\n\n        <div className=\"todo-wrapper\">\n          <AddTodo />\n          <div className=\"todo-content\">\n            <ul className=\"todo-list\">\n              {todos\n                .filter((todo) => {\n                  if (visibilityFilter === 'all') return todo\n                  if (visibilityFilter === 'done') return todo.isDone\n                  return !todo.isDone\n                })\n                .map((todo, id) => (\n                  <Todo todo={todo} index={id} />\n                ))}\n            </ul>\n            <div className=\"todo-controller\">\n              <div className=\"btn-group me-2\" role=\"group\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary btn-all\"\n                  onClick={() => dispatch(showAll())}\n                >\n                  all\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary btn-active\"\n                  onClick={() => dispatch(showUndone())}\n                >\n                  active\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary btn-completed\"\n                  onClick={() => dispatch(showDone())}\n                >\n                  completed\n                </button>\n              </div>\n\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-dark delete-all\"\n                  onClick={() => dispatch(deleteAllTodo())}\n                >\n                  Clear All\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  ADD_TODO,\n  DELETE_ALL_TODO,\n  DELETE_TODO,\n  COMPLETE_TODO,\n  UNDO_TODO,\n  SHOW_ALL,\n  SHOW_UNDONE,\n  SHOW_DONE\n} from '../actionTypes'\n\nlet todoId = 2\n\nconst initialState = {\n  todos: [\n    { id: 0, text: 'Finish Todo', isDone: true },\n    { id: 1, text: 'Watch NBA', isDone: false }\n  ],\n  filter: 'all'\n}\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      return {\n        todos: [\n          ...state.todos,\n          {\n            id: todoId++,\n            text: action.payload.text,\n            isDone: false\n          }\n        ],\n        filter: 'all'\n      }\n    }\n\n    case DELETE_TODO: {\n      return {\n        todos: state.todos.filter((todo) => todo.id !== action.payload.id)\n      }\n    }\n\n    case DELETE_ALL_TODO: {\n      return {\n        todos: []\n      }\n    }\n\n    case COMPLETE_TODO: {\n      const newTodos = [...state.todos]\n      newTodos[action.payload.id].isDone = true\n      return {\n        ...state,\n        todos: newTodos\n      }\n    }\n\n    case UNDO_TODO: {\n      const newTodos = [...state.todos]\n      newTodos[action.payload.id].isDone = false\n      return {\n        ...state,\n        todos: newTodos\n      }\n    }\n\n    case SHOW_ALL: {\n      return {\n        ...state,\n        filter: 'all'\n      }\n    }\n\n    case SHOW_DONE: {\n      return {\n        ...state,\n        filter: 'done'\n      }\n    }\n    case SHOW_UNDONE: {\n      return {\n        ...state,\n        filter: 'undone'\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { combineReducers } from 'redux'\nimport todos from './todos'\n\nexport default combineReducers({ todoState: todos })\n","import { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}